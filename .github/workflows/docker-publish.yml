name: Go CI + Podman Build & Push (RHEL)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  release:
    types: [published]

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout
      - name: Checkout
        uses: actions/checkout@v4

      # 2. Setup Go
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"

      # 3. Cache Modules
      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      # 4. Run Tests
      - name: Run Tests
        run: go test -v ./...

  podman-build:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      # 1. Checkout
      - name: Checkout
        uses: actions/checkout@v4

      # 2. Install Podman
      - name: Install Podman
        run: |
          sudo apt-get update
          sudo apt-get -y install podman

      # 3. Login to GHCR
      - name: Login to GitHub Container Registry
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | podman login ghcr.io -u ${{ github.actor }} --password-stdin

      # 4. Build Podman Image
      - name: Build Image
        run: |
          podman build -t ghcr.io/${{ github.repository_owner }}/myapp:latest \
                       -f Dockerfile.rhel .

      # 5. Tag Image with Commit SHA
      - name: Tag Image
        run: |
          podman tag ghcr.io/${{ github.repository_owner }}/myapp:latest \
                     ghcr.io/${{ github.repository_owner }}/myapp:${{ github.sha }}

      # 6. Push Images to GHCR
      - name: Push Images
        run: |
          podman push ghcr.io/${{ github.repository_owner }}/myapp:latest
          podman push ghcr.io/${{ github.repository_owner }}/myapp:${{ github.sha }}
